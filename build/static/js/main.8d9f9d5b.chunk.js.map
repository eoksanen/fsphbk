{"version":3,"sources":["logo.svg","components/AddContact.js","components/Contact.js","components/ShowContacts.js","components/Filter.js","services/contacts.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AddContact","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","value","onChange","Contact","person","deleteContact","name","number","onClick","ShowContacts","filteredContacts","deletePersonOf","className","map","i","key","id","Filter","filter","handleFilter","baseUrl","axios","get","then","res","data","newObject","post","setMessage","put","catch","error","setTimeout","Promise","reject","delete","Footer","style","color","fontStyle","fontSize","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","message","useEffect","personService","iPersons","console","log","Notification","event","target","preventDefault","personObject","indexOf","p","concat","response","window","confirm","prs","find","rPersons","fl","toLowerCase","includes","c","n","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8d9f9d5b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\n\r\nconst AddContact = ({addPerson, newName, newNumber, handleNameChange, handleNumberChange}) => {\r\n    return(\r\n        <form onSubmit={addPerson}>\r\n        <div>\r\n          name: <input type='text' value={newName} onChange={handleNameChange} />\r\n        </div>\r\n        <div>\r\n          number: <input value={newNumber} onChange={handleNumberChange} />\r\n        </div>\r\n        <button type=\"submit\">add</button>\r\n      </form>\r\n    )\r\n}\r\n\r\n\r\nexport default AddContact","import React from 'react'\r\n\r\nconst Contact = ({person, deleteContact}) => {\r\n    return(\r\n    <tr>\r\n        <td>{person.name}</td>\r\n        <td>{person.number}</td>\r\n        <td><button onClick={deleteContact}>delete</button></td>\r\n    </tr>\r\n    )\r\n}\r\n\r\n\r\nexport default Contact","import React from 'react'\r\nimport Contact from './Contact'\r\n\r\nconst ShowContacts = ({filteredContacts, deletePersonOf}) => {\r\n    return(\r\n        <table className = 'listOfContacts'>\r\n        <thead>\r\n          <tr>\r\n            <td>\r\n              Name:\r\n            </td>\r\n            <td>\r\n              Number:\r\n            </td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {filteredContacts().map((person, i) => \r\n          <Contact key={i} person={person} \r\n          deleteContact={()=>deletePersonOf(person.id)}\r\n          />\r\n        )}\r\n        </tbody>\r\n      </table> \r\n    )\r\n}\r\n\r\n\r\nexport default ShowContacts","import React from 'react'\r\n\r\nconst Filter = ({filter, handleFilter}) => {\r\n    return(\r\n        <form>\r\n        Filter: <input value={filter} onChange={handleFilter} />\r\n      </form>\r\n    )\r\n}\r\n\r\n\r\nexport default Filter","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\n\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n\r\n    return request.then(res => res.data)\r\n}\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(res => res.data)\r\n}\r\nconst update = (id, newObject, setMessage) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject).catch(error => {\r\n      \r\n        setMessage([\r\n          `Cannot update person was removed from server`,\r\n          'error'\r\n        ] \r\n        \r\n        )\r\n        \r\n        setTimeout(() => {\r\n          setMessage([null])\r\n        }, 5000)\r\n        return Promise.reject()})      \r\n\r\n    return request.then(res => res.data)\r\n    \r\n}\r\n\r\nconst deleteContact = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(res => res.data)\r\n\r\n}\r\n\r\nexport default {getAll, create, update, deleteContact}","import React, {useState, useEffect} from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport AddContact from './components/AddContact'\r\nimport ShowContacts from './components/ShowContacts'\r\nimport Filter from './components/Filter'\r\nimport personService from './services/contacts'\r\n\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Phonebook app, Department of Computer Science, University of Helsinki 2020</em>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction App() {\r\n  const [ persons, setPersons] = useState([]) \r\n  const [ newName, setNewName ] = useState('Mickhael')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ filter, setFilter ] = useState('')\r\n  const [ message, setMessage ] = useState([null])\r\n\r\n\r\n  const hook = ()  => {\r\n  \r\n  personService.getAll().then(iPersons => {\r\n    console.log('promise fulfilled') \r\n    setPersons(iPersons) })\r\n  }\r\n    useEffect(hook, [])\r\n  \r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n\r\n    if(persons.map(person => {return person.name}).indexOf(newName) > 0){\r\n      console.log('test Index ',persons.map(p => {return p.name}).indexOf(newName))\r\n    }\r\n    if(persons.map(person => {return person.name}).indexOf(newName) < 0){\r\n      personService.create(personObject)\r\n        .then(res => {\r\n          setPersons(persons.concat(res))\r\n          setNewName('')\r\n          setNewNumber('')\r\n          setMessage([\r\n            `'${res.name}' added to server`,\r\n            'add'\r\n        ])\r\n        setTimeout(() => {\r\n          setMessage([null])\r\n        }, 5000)\r\n      })    .catch(error => {\r\n        setMessage([error.response.data.error,\r\n          'error'\r\n        ])\r\n      setTimeout(() => {\r\n        setMessage([null])\r\n      }, 5000)\r\n        console.log(error.response.data.error)\r\n      })\r\n    }\r\n      else{\r\n        if(window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`)){\r\n          const prs = persons.find(p => p.name === newName)\r\n \r\n            personService.update(prs.id, personObject, setMessage)\r\n            .then(rPersons => {\r\n              setPersons(persons.map(person => person.id !== prs.id ? person : rPersons))            \r\n          })\r\n          setMessage([\r\n            `successfully updated contact`,\r\n            'update'\r\n          ])\r\n          setTimeout(() => {\r\n            setMessage([null])\r\n          }, 5000)            \r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const deletePersonOf = (id) => {\r\n    const person = persons.find(c => c.id === id)\r\n    console.log(`person ${id} needs to be deleted`)\r\n\r\n    if(window.confirm(`are u sure u want to remove ${person.name}?`)){\r\n      personService.deleteContact(id).catch(error => {\r\n\r\n        setMessage([\r\n          `Person '${person.name}' was already removed from server`,\r\n          'error'\r\n        ])\r\n        setTimeout(() => {\r\n          setMessage([null])\r\n        }, 5000)     \r\n      })\r\n      setPersons(persons.filter(n => n.id !== id))\r\n    }\r\n    setMessage([\r\n      `'${person.name}' removed from server`,\r\n      'remove'\r\n    ])\r\n    \r\n    setTimeout(() => {\r\n      setMessage([null])\r\n    }, 5000)\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    console.log('name: ', event.target.value)\r\n    setNewName(event.target.value)\r\n  }\r\n  const handleNumberChange = (event) => {\r\n    console.log('number: ',event.target.value)\r\n    setNewNumber(event.target.value)\r\n  }\r\n  const handleFilter = (event) => {\r\n    console.log('filter: ',event.target.value)\r\n    setFilter(event.target.value)\r\n  }\r\n  const filteredContacts =() => {\r\n    return (persons.filter(fl => {\r\n        return fl.name.toLowerCase().includes(filter.toLowerCase())\r\n      })\r\n    )\r\n  }\r\n\r\n  const Notification = ({message}) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={message[1]}>\r\n        {message[0]}\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Notification message={message} />\r\n      <h2>Phonebook</h2>\r\n      <Filter filter={filter} handleFilter={handleFilter} />\r\n      <h2>add new</h2>\r\n      <AddContact addPerson={addPerson} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\r\n      <h2>Numbers</h2>\r\n      <ShowContacts filteredContacts={filteredContacts} deletePersonOf={deletePersonOf} />\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}